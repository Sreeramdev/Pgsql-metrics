version: '3.8'

services:
  # PostgreSQL Database (existing)
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: sampledb
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8 
      LANGUAGE: en_US.UTF-8
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf 
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backup:/backup
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf", "-c", "hba_file=/var/lib/postgresql/data/pg_hba.conf"]
    restart: unless-stopped
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d sampledb"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PG Back Web Service
  pgbackweb:
    image: eduardolat/pgbackweb:latest
    container_name: pgbackweb
    ports:
      - "8085:8085"  # Web interface port
    environment:
      PBW_ENCRYPTION_KEY: "your_strong_encryption_key_here"  # Change this!
      PBW_POSTGRES_CONN_STRING: "postgresql://admin:admin123@postgres:5432/pgbackweb?sslmode=disable"
      TZ: "UTC"  # Set your timezone
      # Optional S3 configuration (if you want to manage S3 through the UI)
      PBW_S3_ACCESS_KEY_ID: "AKIAXKPUZ46JS5PPIBTV"
      PBW_S3_SECRET_ACCESS_KEY: "34bThE5wiJzceVLUu4FfzEhIDTMpbn51NTDkjFRT"
      PBW_S3_ENDPOINT: "s3.amazonaws.com"
      PBW_S3_FORCE_PATH_STYLE: "true"
      PBW_S3_REGION: "us-east-1"
      PBW_S3_BUCKET: "postgres-backups-b3d1517c"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - monitoring

  # Postgres Exporter (existing)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin123@postgres:5432/sampledb?sslmode=disable"
      PG_EXPORTER_DISABLE_DEFAULT_METRICS: "true"
      PG_EXPORTER_EXTEND_QUERY_PATH: /config/queries.yaml
    volumes:
      - ./queries.yaml:/config/queries.yaml
    ports:
      - "9188:9187"
    depends_on:
      - postgres
    networks:
      - monitoring

  # Prometheus (existing)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - postgres-exporter
    networks:
      - monitoring

  # Grafana (existing)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring

  # Loki (existing)
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3101:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - monitoring

  # Promtail (existing)
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring

volumes:
  postgres_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
